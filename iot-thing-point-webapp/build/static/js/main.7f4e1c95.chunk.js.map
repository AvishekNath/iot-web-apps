{"version":3,"sources":["logo.svg","serviceWorker.js","utils/data-helpers.js","firestore-connection.js","line.chart.js","appbar.js","history.js","gateway/gateway.chart.js","gateway/gateway.list.js","gateway/gateway.index.tsx","dashboard/SimpleLineChart.js","gateway/health/heath.chart.js","gateway/health/health.index.js","dashboard/listItems.js","dashboard/SimpleTable.js","snaps/snap.list.js","snaps/snap.index.js","dashboard/Dashboard.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","createDataPoint","arguments","length","undefined","Date","now","getCurrentTimeUTC","Math","round","random","createRandomData","time","magnitude","data","i","push","addDataPoint","toAdd","console","log","newData","slice","addSensorData","timeStamp","year","getFullYear","month","getMonth","date","getDate","hours","getHours","mins","getMinutes","seconds","getSeconds","UTC","marshallLineChartData","series","sort","a","b","ts","map","Number","value","toFixed","subscribeForRealTimeUpdatesOnDatabase","dbName","callback","get","then","res","size","getTime","onSnapshot","querySnapshot","docChanges","forEach","change","type","doc","_document","version","timestamp","connectUsingFirebase","firebase","apps","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","firestore","LineChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateLiveData","bind","assertThisInitialized","handleStartLiveUpdate","handleStopLiveUpdate","PubNub","subscribeKey","publishKey","secretKey","ssl","state","data1","liveUpdate","serial","params","collectionName","db","collection","temperature","setState","_this$state","data2","e","preventDefault","setInterval","clearInterval","previousProps","previousState","_this$state2","title","react_default","createElement","className","HighchartsChart","Chart","Title","Legend","XAxis","YAxis","es","name","Component","withHighcharts","Highcharts","withStyles","root","flexGrow","width","menuButton","marginLeft","marginRight","classes","AppBar_default","position","Toolbar_default","variant","color","IconButton_default","aria-label","Menu_default","Typography_default","Link","to","history","COLORS","RADIAN","PI","renderCustomizedLabel","_ref","cx","cy","midAngle","innerRadius","outerRadius","index","percent","radius","x","cos","y","sin","label","fill","textAnchor","dominantBaseline","React","CustomTableCell","theme","head","backgroundColor","palette","common","white","body","fontSize","TableCell","id","createData","mac","bundleid","status","health","GatewayDashBoard","rows","total","online","offline","_this2","docRows","axios","_this3","gutterBottom","component","inline","onlineHealth","offlineHealth","totalHealth","Table_default","table","TableHead_default","TableRow_default","align","TableBody_default","row","key","TableCell_default","scope","mac_address","Tooltip_default","placement","Link_default","onClick","redirectToSnap","Brightness1_default","active","Fab_default","redirectToTarget","fabActive","index_es","disabled","fabOffline","marginTop","spacing","unit","overflowX","padding","minWidth","good","border","bad","card","maxWidth","display","flexDirection","flexBasis","flex","borderRadius","height","textAlign","paddingTop","list","paddingRight","rowMargin","marginBottom","GatewayManagement","gateway_list","plotOptions","chart","tooltip","pointFormat","xAxis","dateTimeLabelFormats","second","minute","hour","day","week","lang","noData","SimpleLineChart","handleChange","event","defineProperty","target","handleChecked","isChecked","timerange","isLive","_this$props","yAxisMax","plotLines","seriesData","onChange","layout","verticalAlign","components_Tooltip","valueSuffix","shared","max","flexWrap","formControl","margin","minHeight","float","selectEmpty","GatewayHealthChart","freeMemorySeriesData","cpuUsageSeriesData","thresholdCpuUsage","dashStyle","text","thresholdfreemomory","chartUrl","method","url","attribute","response","dashboard_SimpleLineChart","GatewayHealth","handleOpen","open","handleClose","openSettingMenu","usage","memory","_React$createElement","Modal_default","aria-labelledby","aria-describedby","onClose","disableBackdropClick","style","alignItems","justifyContent","top","concat","left","transform","paper","container","noValidate","autoComplete","TextField_default","textField","Button_default","closeBtn","aria-haspopup","heath_chart","background","boxShadow","shadows","outline","right","bottom","dense","menu","mainListItems","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","secondaryListItems","ListSubheader_default","inset","Assignment_default","calories","fat","carbs","protein","Paper_default","n","styles","fab","addSnaps","snapCard","installBtn","diplay","cursor","rev","tracking","developer","notes","floor","SnapDashBoard","listSnap","deleteSnap","snapData","filter","obj","getSnapList","addSnap","snapObj","addedSnapData","addSnapData","clicked","snap","Card_default","CardActionArea_default","CardContent_default","CardActions_default","snap_list_CustomTableCell","revision","channel","del_enable","SnapManagement","snap_list","Dashboard","handleDrawerOpen","handleDrawerClose","handleProfileMenuOpen","CssBaseline_default","classNames","appBar","appBarShift","disableGutters","toolbar","menuButtonHidden","noWrap","Badge_default","badgeContent","Notifications_default","Drawer_default","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","content","appBarSpacer","Router","Switch","Route","path","exact","gateway_index_GatewayManagement","health_index","snap_index_SnapManagement","objectSpread","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","whiteSpace","breakpoints","up","overflow","chartContainer","tableContainer","h5","App","dashboard_Dashboard","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f4e1c95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import moment from 'moment';\n\nexport const createDataPoint = (time = Date.now(), magnitude = 1000, offset = 0) => {\n\n  //const timeStamp = time + offset * magnitude;\n\n  time = getCurrentTimeUTC();\n  \n  return [\n    time,\n    Math.round((Math.random() * 100) * 2) / 2\n  ];\n};\n\nexport const createRandomData = (time, magnitude, points = 1) => {\n  const data = [];\n  let i = (points * -1) + 1;\n  for (i; i <= 0; i++) {\n    data.push(createDataPoint(time, magnitude, i));\n  }\n  return data;\n};\n\nexport const addDataPoint = (data, toAdd) => {\n  if (!toAdd) toAdd = createDataPoint(data);\n  console.log(toAdd);\n  const newData = data.slice(0); // Clone\n  newData.push(toAdd);\n  return newData;\n};\n\n\nexport const addSensorData = (data, toAdd) => {\n  const newData = data.slice(0); // Clone\n  newData.push(toAdd);\n  return newData;\n};\n\n\nexport const getCurrentTimeUTC = (timeStamp) => {\n    //RETURN:\n    //      = number of milliseconds between current UTC time and midnight of January 1, 1970\n    //var tmLoc = Date.now();\n    //The offset is in minutes -- convert it to ms\n    //return tmLoc.getTime() + tmLoc.getTimezoneOffset() * 60000;\n    //return moment.utc(tmLoc).valueOf()\n\n    let year = new Date(timeStamp).getFullYear();\n    let month = new Date(timeStamp).getMonth();\n    let date = new Date(timeStamp).getDate();\n    let hours = new Date(timeStamp).getHours();\n    let mins = new Date(timeStamp).getMinutes();\n    let seconds = new Date(timeStamp).getSeconds();\n    return Date.UTC(year, month, date, hours, mins, seconds);\n};\n\n\n\nexport const marshallLineChartData =(series) => {\n  series = series.sort(function(a,b){\n    // Turn your strings into dates, and then subtract them\n    // to get a value that is either negative, positive, or zero.\n    return new Date(b.ts) - new Date(a.ts);\n  });\n  const newData = series.map(data => {\n    return [\n      getCurrentTimeUTC(data.ts * 1000),\n      Number(data.value.toFixed(2))\n    ];\n  });\n\n  return newData;\n};\n","import { firebase } from '@firebase/app';\nimport '@firebase/firestore';\nimport { createRandomData, addDataPoint, getCurrentTimeUTC} from './utils/data-helpers';\n\nconst connectToFireStore = (projectId = 0, keyFilePath = '') => {\n    // const firestore = new Firestore({\n    //     projectId: projectId || 'avid-keel-233206',\n    //     keyFilename: keyFilePath || './api-key.json'\n    // });\n    // //console.log(firestore);\n    // const document = firestore.doc('users/IOT');\n    // console.log(document);\n    // // document.get().then(doc => {\n    // //     // Document read successfully.\n    // //     console.log(doc);\n    // // });\n \n    // // document.set({\n    // //     country: 'SA',\n    // //     name: 'Ashok',\n    // //     project: 'IOT'\n    // //   }).then((doc) => {\n    // //       console.log(doc);\n    // //     // Document created successfully.\n    // //   });\n\n    // document.get()\n    // .then((docSnapshot) => {\n    //     if (docSnapshot.exists) {\n    //         document.onSnapshot((doc) => {\n    //            console.log(doc);\n    //         });\n    //     } else {\n    //         console.log(document);\n    //     }\n    // });\n\n};\n\nconst addToDatabase = (database, data, callback) => {\n    database.add(data)\n    .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n};\n\nconst getDocument = (docRef) => {\n    // Get a document\n    docRef.get().then(function(doc) {\n        if (doc.exists) {\n            console.log(\"Document data:\", doc.data());\n        } else {\n            console.log(\"No such document!\");\n        }\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n};\n\nconst subscribeForRealTimeUpdatesOnDocument = (dbName) => {\n    dbName.doc(\"IOT\")\n    .onSnapshot(function(doc) {\n        console.log(\"Current data: \", doc.data());\n    });\n};\n\nconst subscribeForRealTimeUpdatesOnDatabase = (dbName, callback) => {\n    // dbName\n    // .onSnapshot(function(querySnapshot) {\n    //     querySnapshot.forEach(function(doc) {\n    //         console.log(\"snapshot added \", doc)\n    //     });\n    // });\n\n    dbName.get().then(res => {  \n        console.log('Size:', res.size);\n    });\n    var now = new Date().getTime();\n\n    dbName\n    .onSnapshot(function(querySnapshot){\n        querySnapshot.docChanges().forEach(function(change){\n\n            //console.log('Firestore Data :->', change.doc.data());\n        if (\n            change.type === \"added\"  &&\n            ( change.doc._document.version.timestamp.seconds === 0 || \n                now < (change.doc._document.version.timestamp.seconds * 1000)) \n        ) {\n            //console.log(\"added\", change.doc.data());\n            callback && callback(change.doc.data());\n        }\n        if (change.type === \"modified\") {\n            console.log(\"modified\", \"Modified city: \", change.doc.data());\n        }\n    }); \n});\n};\n\nconst makeid = () => {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  \n    for (var i = 0; i < 5; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n  \n    return text;\n};\n\nconst generateRandomTemperature = (db) => {\n\n    setInterval(()=>{\n        addToDatabase(db.collection(\"thing_point_0000000024c500f6\"), {            \n            temperature: Math.floor(Math.random() * 51),\n            timestamp: getCurrentTimeUTC(Date.now())\n        });\n    }, 10000);\n\n};\n  \n\nconst connectUsingFirebase = (collectionName = '') => {\n    // Initialize Cloud Firestore through Firebase\n    let config = {\n        apiKey: \"AIzaSyBe1BUlEB2UToiRzm7jkuYdh85C7YlCZDs\",\n        authDomain: \"avid-keel-233206.firebaseapp.com\",\n        projectId: \"avid-keel-233206\",\n        storageBucket: \"\",\n        messagingSenderId: \"\"\n    };\n\n    !firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\n\n    //console.log(firebase.name);\n    var db = firebase.firestore();\n    //var docRef = db.collection(\"users\").doc(\"IOT\");   \n    \n    // Add a new document with a generated ids  \n    //generateRandomTemperature(db);\n    \n    // addToDatabase(db.collection(\"users\"), {\n    //     country : makeid(),\n    //     name: makeid(),\n    //     project: makeid()\n    // });\n\n    //generateRandomTemperature(db);\n\n    //subscribeForRealTimeUpdatesOnDatabase(db.collection(\"users\"));\n\n    return db;\n    //\n    //subscribeForRealTimeUpdatesOnDocument(db.collection(\"users\"));\n    //Get Document Data\n    //getDocument(docRef);\n    \n};\n \nexport {connectToFireStore, connectUsingFirebase, generateRandomTemperature, subscribeForRealTimeUpdatesOnDatabase};\n","import { Component } from 'react' ;\nimport React from 'react';\n\nimport Highcharts from 'highcharts';\nimport {\n  HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Legend, LineSeries\n} from 'react-jsx-highcharts';\nimport { createRandomData, addDataPoint, getCurrentTimeUTC, addSensorData} from './utils/data-helpers';\nimport moment from 'moment';\nimport {connectToFireStore, connectUsingFirebase, subscribeForRealTimeUpdatesOnDatabase} from './firestore-connection';\nimport Button from '@material-ui/core/Button';\nimport PubNub from 'pubnub';\n\n\nclass LineChart extends Component {\n\n  constructor (props) {\n    super(props);\n    this.updateLiveData = this.updateLiveData.bind(this);\n    this.handleStartLiveUpdate = this.handleStartLiveUpdate.bind(this);\n    this.handleStopLiveUpdate = this.handleStopLiveUpdate.bind(this);\n\n    var pubnub = new PubNub({\n      subscribeKey: \"mySubscribeKey\",\n      publishKey: \"myPublishKey\",\n      secretKey: \"secretKey\",\n      ssl: true\n  });\n\n\n    //const now = getCurrentTimeUTC();\n    this.state = {\n      data1: createRandomData(),\n      // data2: createRandomData(now),\n      liveUpdate: false\n    };\n    let serial = '';\n    if(this.props.match){\n      serial = this.props.match.params.serial;\n    }\n    let collectionName = 'thing_point_' + serial;\n    if(collectionName){\n      let db = connectUsingFirebase(collectionName);\n      subscribeForRealTimeUpdatesOnDatabase(db.collection(collectionName), function(data){\n        //this.setState({data1: data});\n        console.log('Sensor Data:->', data.temperature, getCurrentTimeUTC(data.timestamp * 1000));\n        this.setState({\n          data1: addSensorData(this.state.data1, [\n            getCurrentTimeUTC(data.timestamp * 1000), // Unix to UTC in Milliseconds\n            data.temperature\n          ])\n        });\n       // console.log('sensorData:->', data);\n      }.bind(this));\n    }\n    //console.log(createRandomData(now));\n  }\n\n  componentDidMount () {\n    //this.handleStartLiveUpdate();\n  }\n\n  updateLiveData () {\n    const { data1, data2 } = this.state;\n    this.setState({\n      data1: addDataPoint(data1) //,\n      // data2: addDataPoint(data2)\n    });\n  }\n\n  handleStartLiveUpdate (e) {\n    e && e.preventDefault();\n    this.setState({\n      liveUpdate: window.setInterval(this.updateLiveData, 1000 * 2)\n    });\n  }\n\n  handleStopLiveUpdate (e) {\n    e.preventDefault();\n    window.clearInterval(this.state.liveUpdate);\n    this.setState({\n      liveUpdate: false\n    });\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    // const newProps = this.props;\n    // if(this.state.data1) {\n    //   this.setState({\n    //     data1: addSensorData(previousState.data1, [\n    //       getCurrentTimeUTC(this.state.data1.timestamp * 1000), // Unix to UTC in Milliseconds\n    //       this.state.data1.temperature\n    //     ])\n    //   });\n    // }\n  }\n\n  // componentWillUpdate(nextProps, nextState) {\n  //   console.log(nextProps, nextState);\n  // }\n\n  render() {\n    const { data1, data2, liveUpdate } = this.state;\n    const title = this.props.title || 'Dynamically updating Sensor Data`';\n    return (\n      <div className=\"app\">\n        {/* Temperature: {this.data1.temperature}, \n        Timestamp :: {moment(this.data1.timestamp * 1000).format('YYYY-MM-DD, HH:mm:ss')} */}\n\n        <HighchartsChart>\n          <Chart />\n\n          <Title>{title}</Title>\n\n          <Legend>\n            <Legend.Title>Legend</Legend.Title>\n          </Legend>\n\n          <XAxis type=\"datetime\">\n            <XAxis.Title>Time</XAxis.Title>\n          </XAxis>\n\n          <YAxis >\n            <YAxis.Title>Temperature (Celcius &#176;)</YAxis.Title>  \n            <LineSeries name=\"Temperature Sensor\" data={data1} />\n            {/* <LineSeries name=\"Sensor 2\" data={data2} /> */}\n          </YAxis>\n        </HighchartsChart>\n\n        {/* <div>\n          {!liveUpdate && (\n            <button className=\"btn btn-success\" onClick={this.handleStartLiveUpdate}>Live update</button>\n          )}\n          {liveUpdate && (\n            <button className=\"btn btn-danger\" onClick={this.handleStopLiveUpdate}>Stop update</button>\n          )}\n        </div> */}\n\n          {/* <Button variant=\"contained\" color=\"primary\">\n            Primary\n          </Button> */}\n\n      </div>\n    );\n  }\n}\n\nexport default withHighcharts(LineChart, Highcharts);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    width: '100%'\n  },\n  menuButton: {\n    marginLeft: -18,\n    marginRight: 10,\n  },\n};\n\nfunction DenseAppBar(props) {\n  \n  const { classes } = props;\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\" color=\"primary\">\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n       \n            <nav className=\"nav-links\">\n            <ul>\n              <li>\n                <Link to=\"/thing_point/0000000024c500f6/\">Thing Point (0000000024c500f6)</Link>\n              </li> \n              <li>\n                <Link to=\"/gateway/\">Thing Management DashBoard</Link>\n              </li> \n            </ul>\n          </nav> \n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nDenseAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DenseAppBar);","import * as history from 'history';\n\nexport default history.createBrowserHistory();\n","import React, { PureComponent } from 'react';\nimport {\n  PieChart, Pie, Sector, Cell,\n} from 'recharts';\n\nconst data = [\n  { name: 'Online', value: 3 },\n  { name: 'Offline', value: 0 }\n];\nconst COLORS = ['#8bc34a', '#CCC'];\n\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.25;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  const label = data[index].name;\n  const value = data[index].value;\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        {value} ({label})\n    </text>\n  );\n};\n\n\nexport default class Example extends React.Component {\n\n  constructor(props) {\n    super(props);   \n    this.state = { \n        data: [\n          { name: 'Online', value: 3 },\n          { name: 'Offline', value: 0 }\n        ]\n    }; \n  }\n\n  render() {\n    let {online, offline} = this.props;\n    // if(online){\n    //   data[0].value = online;\n    //   data[1].value = offline;\n    // }   \n\n    return ( \n      <PieChart width={260} height={260}>\n        <Pie\n          data={this.state.data}\n          cx={130}\n          cy={130}\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={100} \n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {\n            this.state.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n        </Pie>\n      </PieChart> \n        \n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Brightness1 from '@material-ui/icons/Brightness1';\nimport {connectToFireStore, connectUsingFirebase, subscribeForRealTimeUpdatesOnDatabase} from '../firestore-connection';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport history from '../history.js';\nimport axios from 'axios';\nimport Example from './gateway.chart';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport { TrendingUp, TrendingDown } from '@material-ui/icons';\nimport Link from '@material-ui/core/Link';\nimport { classNames } from 'classnames';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n    padding: '1em'\n  },\n  table: {\n    minWidth: 700,\n    marginTop: '1em'\n  },\n  active: {\n    fontSize: 12,\n    color: '#32CD32'\n  },\n  offline: {\n    fontSize: 12,\n    color: '#CCC'\n  },\n  health: {\n      good: {\n        color: '#32CD32',\n        border: '1px solid #000',\n        backgroundColor: '#8bc34a'\n      },\n      bad: {\n        color: '#DC143C'\n      }\n  },\n  card: {\n    maxWidth: '33.33%',\n    display: 'flex',\n    flexDirection: 'column',\n    flexBasis: '100%',\n    flex:1\n  },\n  title: {\n      color: '#FFF'\n  },\n  totalHealth: {\n    color: '#FFF',\n    backgroundColor: '#2196f3',\n    borderRadius: '15px',\n    width: '30px',\n    height: '30px',\n    textAlign: 'center',\n    display: 'inline-block',\n    paddingTop: '5px',\n    fontSize: '1.2em'\n  },\n  onlineHealth: {\n    color: '#FFF',\n    backgroundColor: '#8bc34a',\n    borderRadius: '15px',\n    width: '30px',\n    height: '30px',\n    textAlign: 'center',\n    display: 'inline-block',\n    paddingTop: '5px',\n    fontSize: '1.2em'\n  },\n  offlineHealth: {\n    color: '#FFF',\n    backgroundColor: '#999',\n    borderRadius: '15px',\n    width: '30px',\n    height: '30px',\n    textAlign: 'center',\n    display: 'inline-block',\n    paddingTop: '5px',\n    fontSize: '1.2em'\n  },\n  list: {\n    marginTop: '2em'\n  },\n  fabActive: {\n    color: '#FFF',\n    backgroundColor: '#8bc34a'\n  },\n  fabOffline: {\n    color: '#FFF',\n    backgroundColor: '#f44336'\n  },\n  inline: {\n    display: 'inline-block',\n    paddingRight: '3em',\n    paddingTop: '.7em',\n    width: '100px',\n    fontSize: '1.2em'\n  },\n  rowMargin: {\n    marginBottom: '1.3em'\n  }\n});\n\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: '#607d8b',\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n\nlet id = 0;\nfunction createData(mac, hostname, location, bundleid, status, health) {\n  id += 1;\n  return { id, mac, hostname, location, bundleid, status, health };\n}\n\nconst rows = [\n  createData('128.0.0.0', 'hostname1', 'location1' , 'Default', true, 1),\n  createData('128.0.66.0', 'hostname2', 'location2' , 'Default', false, 2),\n  createData('128.0.0.1', 'hostname3', 'location3' , 'Default', true, 1)\n];\n\nclass GatewayDashBoard extends React.Component {\n\n    constructor(props) {\n        super(props);   \n        this.state = { \n            rows: [], \n            total: 0,\n            online: 0,\n            offline: 0\n        }; \n    } \n\n    componentDidMount() {\n      let docRows = [];\n      let online = 0;\n      let offline = 0;\n      axios.get(`https://us-central1-sage-buttress-230707.cloudfunctions.net/Visibility-server?type=thingpointlist`)\n        .then(res => {\n          let data = res.data;    \n          data.forEach(function(doc) {\n            docRows.push(doc);\n            if(doc.status === true){\n                online+=1;\n            }\n            if(doc.status === false){\n                offline+=1;\n            }\n          });\n\n          this.setState({\n            rows: docRows,\n            total: docRows.length,\n            online: online,\n            offline: offline\n          });\n      });\n    }\n  \n\n    redirectToTarget(mac){\n      history.push('/health/' + mac + '/');\n    }\n\n    redirectToSnap(id){\n      history.push('/snap/' + id + '/');\n    }\n\n    render(){\n      const { classes } = this.props;\n      const { rows, total, online, offline } = this.state;\n\n      return(   \n\n       <div className=\"container\">\n        \n        {/* <div className=\"row\">\n          <div className=\"col-xs\">\n              <div className=\"card\">\n              <Typography variant=\"subheading\" color=\"textSecondary\" gutterBottom>\n                Thing Point Status Count \n              </Typography>\n\n              <div className=\"row center-xs\">\n                <div className=\"col-xs-6\">\n                    <div className=\"box\">\n                      <Example online={online} offline={offline}/>\n                    </div>\n                </div> \n\n                             \n              </div>              \n              </div>\n          </div>\n \n        </div>  */}\n\n\n        <div className=\"row\">\n          <div className=\"col-xs\">\n              <div className=\"card\">\n              <Typography variant=\"subheading\" color=\"textSecondary\" gutterBottom>\n                Thing Point List\n              </Typography>\n              <div className=\"row-count\">\n              <div className=\"row\">            \n                  <div className=\"col-xs\">\n                    <Typography component=\"h6\" variant=\"display1\" gutterBottom className={classes.inline}> Online</Typography>\n                    <Typography component=\"h6\" variant=\"display1\" className={classes.onlineHealth} gutterBottom>{online}</Typography>\n                  </div>\n\n                  <div className=\"col-xs\">\n\n                    <Typography component=\"h6\" variant=\"display1\" gutterBottom className={classes.inline}> Offline</Typography>\n                    <Typography component=\"h6\" variant=\"display1\" className={classes.offlineHealth} gutterBottom>{offline}</Typography>\n                  </div>\n\n                  <div className=\"col-xs\">\n                    <Typography component=\"h6\" variant=\"display1\" gutterBottom className={classes.inline}> Total</Typography>\n                    <Typography component=\"h6\" variant=\"display1\" className={classes.totalHealth} gutterBottom>{total}</Typography>\n                  </div> \n                </div>\n              </div>\n\n              <Table className={classes.table}>\n          <TableHead>\n              <TableRow>\n                  <CustomTableCell>Mac Address</CustomTableCell>\n                  <CustomTableCell align=\"left\">Host Name</CustomTableCell>\n                  <CustomTableCell align=\"left\">Location</CustomTableCell>\n                  <CustomTableCell align=\"left\">Snap List</CustomTableCell>              \n                  <CustomTableCell align=\"left\">Status</CustomTableCell>\n                  <CustomTableCell align=\"left\">Health</CustomTableCell>\n              </TableRow>\n          </TableHead>\n          <TableBody>\n              {rows.map(row => (\n              <TableRow key={row.serial}>\n                  <TableCell component=\"th\" scope=\"row\">\n                  {row.mac_address}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.hostname}</TableCell>\n                  <TableCell align=\"left\">{row.location}</TableCell>\n                  <TableCell align=\"left\">\n                  <Tooltip title=\"View Snaps\" placement=\"top-start\"> \n                    <Link\n                      component=\"button\"\n                      variant=\"body2\"\n                      onClick={() => {\n                        this.redirectToSnap(row.serial);\n                      }}\n                    >\n                      View\n                    </Link>    \n                    </Tooltip>              \n                  </TableCell>\n                  <TableCell align=\"left\">\n                      {row.status && (\n                          <Brightness1 className={classes.active} color='primary' />\n                      )}\n\n                      {!row.status && (\n                          <Brightness1 className={classes.offline} color='disabled' />\n                      )}\n                      \n                      {row.status ? ' Active' : ' Offline'}\n                  </TableCell>\n                  <TableCell align=\"left\">\n                      {row.health === 'green' && (\n                          <Tooltip title=\"View health charts\" placement=\"top-start\">\n                            <Fab size=\"small\" color=\"primary\" aria-label=\"Add\"\n                              onClick={() => this.redirectToTarget(row.serial)}\n                              className={classes.fabActive}\n                              >\n                              <TrendingUp/>\n                            </Fab>  \n                          </Tooltip>\n                                            \n                      )}\n\n                      {row.health === 'red' && (\n                          <Tooltip title=\"View health charts\" placement=\"top-start\"> \n                           <Fab size=\"small\" color=\"secondary\" aria-label=\"Edit\" disabled={row.health === 'red'}\n                              className={classes.fabOffline}>\n                              <TrendingDown/>\n                         </Fab>\n                          </Tooltip>\n                      )}                \n                  </TableCell>\n              </TableRow>\n              ))}\n          </TableBody>\n          </Table>\n              \n              </div>\n          </div>\n      </div> \n     </div>\n    )\n  }\n    \n}\n\nGatewayDashBoard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GatewayDashBoard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GatewayDashBoard from './gateway.list';\nimport Typography from '@material-ui/core/Typography';\n\nexport default class GatewayManagement extends React.Component {\n    render() {\n       return (\n          <div>\n               {/* <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n                  TP(Thing Point) DashBoard\n               </Typography>\n               <hr className=\"hr-line\"/> */}\n             <GatewayDashBoard/>\n          </div>\n       );\n    }\n }","import React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport {\n  HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Subtitle, Tooltip, Legend, LineSeries\n} from 'react-jsx-highcharts';\n\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 180,\n    minHeight:20,\n    float:'right'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\n\nconst plotOptions = {\n  chart: {\n    height: 200,\n    type: 'line'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.y}</b> ({point.percentage:.1f}%)<br/>' \n  },  \n  xAxis: {\n    type: \"datetime\",\n    \"dateTimeLabelFormats\": {\n      \"second\": \"%H:%M\",\n      \"minute\": \"%H:%M\",\n      \"hour\": \"%H:%M\",\n      \"day\": \"%e-$b-%y\",\n      \"week\": \"%e\",\n      \"month\": \"%e\",\n      \"year\": \"%e\"\n    },    \n  },\n  lang: {\n    noData: \"No Data Found.\"\n  }  \n};\n\n\nclass SimpleLineChart extends React.Component {\n\n  constructor(props) {\n    super(props);   \n    this.state = { \n        timerange: '',\n        isChecked: false\n    }; \n  }\n\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleChecked = () => {\n    this.setState({isChecked: !this.state.isChecked});\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { isLive } = this.props;\n    const { yAxisMax, plotLines} = this.props;\n\n    const data = this.props.seriesData;\n    const title = this.props.title;\n    const name = this.props.name;\n\n     return (\n\n      <div> \n\n        <div className=\"row end-xs\">\n\n          <div className=\"col-xs-2\">\n            {isLive && (\n              <div className=\"live-button\" >\n                Live\n                <label className=\"switch\">\n                  <input className=\"toggle\" type=\"checkbox\"\n                  onChange={this.handleChecked}/>\n                  <span className=\"slider round\"/>\n                </label>\n              </div>\n            )}\n          {/* <form className={classes.root} autoComplete=\"off\">\n                <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"timerange-simple\">Select Time Range</InputLabel>\n                <Select\n                  value={this.state.timerange}\n                  onChange={this.handleChange}\n                  inputProps={{\n                    name: 'timerange',\n                    id: 'timerange-simple',\n                  }}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={10}>3 Hours</MenuItem>\n                  <MenuItem value={20}>1 Day</MenuItem>\n                  <MenuItem value={30}>7 Days</MenuItem>\n                </Select>\n              </FormControl>\n\n            </form> */}\n           </div>\n        </div>\n        <HighchartsChart plotOptions={plotOptions}>\n        <Chart height={plotOptions.chart.height}/>\n  {/* \n        <Title>Solar Employment Growth by Sector, 2010-2016</Title> */}\n  {/* \n        <Subtitle>Source: thesolarfoundation.com</Subtitle> */}\n\n        <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\n        <Tooltip valueSuffix=\" \" shared />\n\n        <XAxis type=\"datetime\">\n            <XAxis.Title>Time</XAxis.Title>\n        </XAxis>\n\n        <YAxis max={yAxisMax} plotLines={plotLines}>\n          <YAxis.Title>{title}</YAxis.Title>\n          <LineSeries name={name} data={data} />        \n        </YAxis>\n      </HighchartsChart>\n      </div>\n     )\n\n  }\n\n};\n\nSimpleLineChart.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n  \nexport default withHighcharts(withStyles(styles)(SimpleLineChart), Highcharts);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport LineComponent from '../../line.chart';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport SimpleLineChart from '../../dashboard/SimpleLineChart';\nimport axios from 'axios';\nimport { marshallLineChartData } from '../../utils/data-helpers';\n\nconst styles = {\n   card: {\n     marginBottom: '2em',\n     maxWidth: '100%',\n     display: 'flex',\n     flexDirection: 'column',\n     flexBasis: '100%',\n     flex:1\n   }\n };\n\n\nclass GatewayHealthChart extends React.Component {\n\n   constructor(props) {\n      super(props);   \n      this.state = { \n         'freeMemorySeriesData': '',\n         'cpuUsageSeriesData': '',\n         'thresholdCpuUsage': [{\n            value: 90,\n            color: 'red',\n            dashStyle: 'shortdash',\n            width: 1,\n            label: {\n               text: 'Threshold'\n            }\n         }],\n         'thresholdfreemomory': [{\n            value: 900,\n            color: 'red',\n            dashStyle: 'shortdash',\n            width: 1,\n            label: {\n               text: 'Threshold'\n            }\n         }]\n      }; \n      \n\n      this.chartUrl = `https://us-central1-sage-buttress-230707.cloudfunctions.net/Visibility-server`;\n   }\n \n   componentDidMount() { \n\n      // Free mem\n      axios({\n         method:'get',\n         url: this.chartUrl,\n         params: {\n            'type': 'healthchart',\n            'serial': this.props.serial,\n            'attribute': 'freemem'\n         }\n       })\n      .then(response => {\n         console.log(response);\n         let seriesData = marshallLineChartData(response.data);\n         console.log(seriesData);\n         this.setState({\n            freeMemorySeriesData: seriesData\n         });\n      });\n\n      // CPU\n      axios({\n         method:'get',\n         url: this.chartUrl,\n         params: {\n            'type': 'healthchart',\n            'serial': this.props.serial,\n            'attribute': 'cpu_usage'\n         }\n       })\n      .then(response => {\n         let seriesData = marshallLineChartData(response.data);\n         console.log(seriesData);\n         this.setState({\n            cpuUsageSeriesData: seriesData\n         });\n      });\n\n   }\n   \n   render() {\n      const { classes } = this.props;\n\n       return (\n         <div className=\"container\">\n            <div className=\"row\">\n               <div className=\"col-xs\">\n                  <div className=\"card\">\n                  <Typography variant=\"subheading\" color=\"textSecondary\" gutterBottom>\n                     CPU Usage\n                  </Typography>\n \n                  <SimpleLineChart \n                  seriesData={this.state.cpuUsageSeriesData} isLive={false} yAxisMax={100}\n                  title=\"CPU Usage (%)\"\n                  name=\"Usage\"\n                  plotLines={this.state.thresholdCpuUsage}\n                  />\n\n                  </div>\n               </div>\n      \n            </div> \n          \n\n            <div className=\"row\">\n               <div className=\"col-xs\">\n                  <div className=\"card\">\n                  <Typography variant=\"subheading\" color=\"textSecondary\" gutterBottom>\n                     Memory Usage\n                  </Typography>\n \n                  <SimpleLineChart \n                  seriesData={this.state.freeMemorySeriesData} isLive={false} yAxisMax={1000}\n                  title=\"Memory Usage (Mb)\"\n                  name=\"Memory\"\n                  plotLines={this.state.thresholdfreemomory}\n                  />\n                  </div>\n               </div>\n      \n            </div> \n\n         </div> \n       )\n}\n}\n\nGatewayHealthChart.propTypes = {\n   classes: PropTypes.object.isRequired,\n };\n \n export default withStyles(styles)(GatewayHealthChart);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GatewayHealthChart from './heath.chart';\r\nimport { Settings } from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport classNames from 'classnames';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n   root: {\r\n     marginTop: theme.spacing.unit * 3,\r\n     overflowX: 'auto',\r\n     padding: '1em'\r\n   },\r\n   paper: {\r\n     position: 'absolute',\r\n     width: theme.spacing.unit * 100,\r\n     backgroundColor: theme.palette.background.paper,\r\n     boxShadow: theme.shadows[5],\r\n     padding: theme.spacing.unit * 4,\r\n     outline: 'none',\r\n     height: theme.spacing.unit * 35\r\n   },\r\n   closeBtn: {\r\n     position: 'absolute',\r\n     right: '2em',\r\n     bottom: '2em'\r\n   },\r\n   container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n   },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n   },\r\n    dense: {\r\n      marginTop: 16,\r\n   },\r\n    menu: {\r\n      width: 200,\r\n   }\r\n });\r\n\r\n\r\nfunction getModalStyle() {\r\n   const top = 50;\r\n   const left = 50;\r\n \r\n   return {\r\n     top: `${top}%`,\r\n     left: `${left}%`,\r\n     transform: `translate(-${top}%, -${left}%)`,\r\n   };\r\n}\r\n \r\nclass GatewayHealth extends React.Component {\r\n\r\n   constructor(props) {\r\n      super(props);   \r\n      this.state = { \r\n         open: false,\r\n         temperature: '50',\r\n         usage: '50',\r\n         memory: '70'\r\n      }; \r\n\r\n      this.serial = '';\r\n      \r\n      if(this.props.match){\r\n         this.serial = this.props.match.params.serial;\r\n      }\r\n  } \r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n   openSettingMenu = () => {\r\n      console.log('open setting');\r\n   };\r\n\r\n   handleChange = name => event => {\r\n      this.setState({\r\n        [name]: event.target.value,\r\n      });\r\n    };\r\n\r\n    render() {\r\n\r\n      const { classes } = this.props;\r\n      return (\r\n          <div>\r\n               <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick={false}\r\n                style={{alignItems:'center',justifyContent:'center'}}\r\n              >\r\n                <div style={getModalStyle()} className={classes.paper}>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs\">\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Chart Threshold Settings\r\n                  </Typography>\r\n                  <hr/>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs\">\r\n\r\n                     <form className={classes.container} noValidate autoComplete=\"off\">\r\n                     <TextField\r\n                           id=\"outlined-name\"\r\n                           label=\"CPU usage\"\r\n                           className={classes.textField}\r\n                           value={this.state.usage}\r\n                           onChange={this.handleChange('usage')}\r\n                           margin=\"normal\"\r\n                           variant=\"outlined\"\r\n                        />\r\n                        \r\n                        <TextField\r\n                           id=\"outlined-name\"\r\n                           label=\"CPU temperature\"\r\n                           className={classes.textField}\r\n                           value={this.state.temperature}\r\n                           onChange={this.handleChange('temperature')}\r\n                           margin=\"normal\"\r\n                           variant=\"outlined\"\r\n                        /> \r\n\r\n                        <TextField\r\n                           id=\"outlined-name\"\r\n                           label=\"Memory Usage\"\r\n                           className={classes.textField}\r\n                           value={this.state.memory}\r\n                           onChange={this.handleChange('memory')}\r\n                           margin=\"normal\"\r\n                           variant=\"outlined\"\r\n                        />\r\n\r\n\r\n                     </form>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row bottom-xs\">\r\n                    <div className=\"col-xs\">                       \r\n                        <Button \r\n                          className={classes.closeBtn} \r\n                          variant=\"contained\" \r\n                          color=\"secondary\"\r\n                          onClick={this.handleClose}\r\n                        >\r\n                          Save\r\n                        </Button>  \r\n                    </div>\r\n                </div>\r\n\r\n                 \r\n                  \r\n                  {/* <SimpleModalWrapped /> */}\r\n                </div>\r\n              </Modal>\r\n             <div className=\"row\">\r\n               <div className=\"col-xs-10\">\r\n               <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\r\n                  Thing Point Health\r\n               </Typography>\r\n               </div>\r\n\r\n               <div className=\"col-xs-2 end-xs\">\r\n                  <IconButton color=\"inherit\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\" \r\n                  onClick={this.handleOpen}\r\n               >\r\n                  <Settings/>\r\n               </IconButton>\r\n               </div>\r\n             </div>  \r\n\r\n            <hr className=\"hr-line\"/>\r\n            <GatewayHealthChart serial={this.serial}/>\r\n          </div>\r\n       );\r\n    }\r\n}\r\n\r\n\r\nGatewayHealth.propTypes = {\r\n   classes: PropTypes.object.isRequired,\r\n};\r\n \r\nexport default withStyles(styles)(GatewayHealth);\r\n\r\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport {ShoppingCartIcon, DeviceHub, Dock, Memory} from '@material-ui/icons';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Link as RouterLink } from 'react-router-dom';\nimport history from '../history.js';\n\n//const MyLink = props => <RouterLink to=\"/open-collective\" {...props} />\n\nconst redirectToTarget = () =>{\n  history.push('/gateway/'); \n};\n\nexport const mainListItems = (\n  <div>\n    <ListItem button onClick={() => redirectToTarget()}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"TP Dashboard\" />\n    </ListItem>\n    \n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = {\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n};\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n\nconst data = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction SimpleTable(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat (g)</TableCell>\n            <TableCell align=\"right\">Carbs (g)</TableCell>\n            <TableCell align=\"right\">Protein (g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map(n => (\n            <TableRow key={n.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {n.name}\n              </TableCell>\n              <TableCell align=\"right\">{n.calories}</TableCell>\n              <TableCell align=\"right\">{n.fat}</TableCell>\n              <TableCell align=\"right\">{n.carbs}</TableCell>\n              <TableCell align=\"right\">{n.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Brightness1 from '@material-ui/icons/Brightness1';\r\nimport {connectToFireStore, connectUsingFirebase, subscribeForRealTimeUpdatesOnDatabase} from '../firestore-connection';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport history from '../history.js';\r\nimport axios from 'axios';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {WbCloudy, RotateRight, Cancel, Delete} from '@material-ui/icons';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport { TrendingUp, TrendingDown } from '@material-ui/icons';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n    padding: '1em'\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: theme.spacing.unit * 135,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    outline: 'none',\r\n    height: theme.spacing.unit * 50\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n    marginTop: '2em'\r\n  },\r\n  active: {\r\n    fontSize: 12,\r\n    color: '#32CD32'\r\n  },\r\n  offline: {\r\n    fontSize: 12,\r\n    color: '#eeeeee'\r\n  },\r\n  health: {\r\n      good: {\r\n        color: '#32CD32',\r\n        backgroundColor: '#8bc34a'\r\n      },\r\n      bad: {\r\n        color: '#DC143C'\r\n      }\r\n  },\r\n  card: {\r\n    maxWidth: '33.33%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexBasis: '100%',\r\n    flex:1\r\n  },\r\n  title: {\r\n      color: '#FFF'\r\n  },\r\n  totalHealth: {\r\n    color: '#FFF',\r\n    backgroundColor: '#2196f3'\r\n  },\r\n  onlineHealth: {\r\n    color: '#FFF',\r\n    backgroundColor: '#8bc34a'\r\n  },\r\n  offlineHealth: {\r\n    color: '#FFF',\r\n    backgroundColor: '#607d8b'\r\n  },\r\n  list: {\r\n    marginTop: '2em'\r\n  },\r\n  fab: {\r\n    backgroundColor: '#FF0000'\r\n  },\r\n  addSnaps: {\r\n    float: 'right',\r\n    backgroundColor: '#2196f3'\r\n  },\r\n  snapCard: {\r\n    backgroundColor: '#efefef'\r\n  },\r\n  installBtn: {\r\n    float: 'right',\r\n    diplay: 'flex',\r\n    align: 'right'\r\n  },\r\n  closeBtn: {\r\n    position: 'absolute',\r\n    right: '2em',\r\n    bottom: '2em'\r\n  },\r\n  status: {\r\n    cursor: 'default',\r\n    width: '80px',\r\n    display: 'inline-block',\r\n    position: 'relative',\r\n    top:'-5px',\r\n    padding:'5px 10px',\r\n    color: '#90a4ae'\r\n  }\r\n});\r\n\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: '#607d8b',\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n\r\nlet id = 0;\r\nfunction createData(name, version, rev, tracking, developer, notes, status) {\r\n  id += 1;\r\n  id += Math.floor(Math.random() * 1000);\r\n  return { id, name, version, rev, tracking, developer, notes, status};\r\n}\r\n\r\nconst rows = [\r\n  createData('httplab', '5.47-3', 167, 'beta' , 'canonical', 'devmode', 'Installed'),\r\n  createData('ble', '5.47-3', 167, 'beta' , 'canonical', 'devmode', 'Installed'),\r\n  createData('pubnub', '5.47-3', 167, 'beta' , 'canonical', 'devmode', 'Installed')\r\n];\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n \r\nclass SnapDashBoard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);   \r\n        this.state = { \r\n            snapData: [],\r\n            open: false,\r\n            addSnapData: []\r\n        }; \r\n    } \r\n\r\n    handleOpen = () => {\r\n      this.setState({ open: true });\r\n      this.listSnap();\r\n    };\r\n  \r\n    handleClose = () => {\r\n      this.setState({ open: false });\r\n    };  \r\n\r\n    deleteSnap = (row) => {\r\n      console.log(row);\r\n      let rows = this.state.snapData;\r\n      let filteredRows = rows.filter((obj) => {\r\n        return obj.name !== row.name;\r\n      });\r\n\r\n      // Delete Snap\r\n      let url = 'https://us-central1-sage-buttress-230707.cloudfunctions.net/Visibility-server?type=deletesnap';\r\n      axios({\r\n        method:'get',\r\n        url: url,\r\n        params: {\r\n          'serial': this.props.serial,\r\n          'name': row.name   \r\n        }\r\n      })\r\n      .then(res => {\r\n        let data = res.data;    \r\n        console.log(data);\r\n        this.getSnapList();\r\n      });\r\n    };\r\n    // Add Snap\r\n    addSnap = (snapObj = {}) => {\r\n\r\n      let addedSnapData = this.state.addSnapData.slice(0);\r\n      addedSnapData.forEach(obj => {\r\n        if(obj.serial === snapObj.serial){\r\n          obj.clicked = true;\r\n        }\r\n      });\r\n\r\n      this.setState({ addSnapData: addedSnapData });\r\n      let url = ' https://us-central1-sage-buttress-230707.cloudfunctions.net/Visibility-server?type=addsnap';\r\n      axios({\r\n        method:'get',\r\n        url: url,\r\n        params: {\r\n          'serial': this.props.serial,\r\n          'name': snapObj.name   \r\n        }\r\n      })\r\n      .then(res => {\r\n        let data = res.data;    \r\n        console.log('Add Snap', data); \r\n        this.getSnapList();\r\n      });\r\n      \r\n    };\r\n\r\n    // List Snap\r\n    listSnap = (snapObj = {}) => {      \r\n      let url = 'https://us-central1-sage-buttress-230707.cloudfunctions.net/Visibility-server?type=snapstorelist';\r\n      axios({\r\n        method:'get',\r\n        url: url,\r\n        params: {\r\n          'serial': this.props.serial\r\n        }\r\n      })\r\n      .then(res => {\r\n        let data = res.data;\r\n        data.clicked = false;    \r\n        this.setState({ addSnapData: data });\r\n        console.log('List Snap', data); \r\n      });\r\n      \r\n    };\r\n\r\n    getSnapList = () => {\r\n      let url = 'https://us-central1-sage-buttress-230707.cloudfunctions.net/Visibility-server?type=snapbundleinfo&serial=' + this.props.serial;\r\n      axios.get(url)\r\n        .then(res => {\r\n          let data = res.data;    \r\n          this.setState({\r\n            snapData: data\r\n          });\r\n      });\r\n    };\r\n\r\n    componentDidMount(){\r\n      this.getSnapList();\r\n    }\r\n\r\n    render(){\r\n      const { classes, serial } = this.props;\r\n      const { snapData, addSnapData} = this.state;\r\n\r\n      return(        \r\n\r\n       <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs\">\r\n              <div className=\"card\">\r\n\r\n              <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                disableBackdropClick={false}\r\n                style={{alignItems:'center',justifyContent:'center'}}\r\n              >\r\n                <div style={getModalStyle()} className={classes.paper}>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs\">\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Add Snaps\r\n                  </Typography>\r\n                  <hr/>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {addSnapData.map(snap => (\r\n                      <div key={snap.serial} className=\"col-xs\">\r\n                        <Card className={snap.clicked === true ? classes.snapCard + ' disable-card' :  classes.snapCard}>\r\n                          <CardActionArea>                    \r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                {snap.name}\r\n                              </Typography>\r\n                              <hr/>\r\n                              Version: {snap.version}\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button disabled={snap.clicked === true || snap.status !== 'install'} onClick={this.addSnap.bind(this, snap)} className={classes.installBtn} variant=\"contained\" size=\"small\" color=\"primary\">\r\n                              Install\r\n                            </Button> \r\n                          </CardActions>\r\n                        </Card>\r\n                      </div>                \r\n                    ))}      \r\n                </div>\r\n\r\n                <div className=\"row bottom-xs\">\r\n                    <div className=\"col-xs\">                       \r\n                        <Button \r\n                          className={classes.closeBtn} \r\n                          variant=\"contained\" \r\n                          color=\"secondary\"\r\n                          onClick={this.handleClose}\r\n                        >\r\n                          Close\r\n                        </Button>  \r\n                    </div>\r\n                </div>\r\n                  \r\n                  {/* <SimpleModalWrapped /> */}\r\n                </div>\r\n              </Modal>\r\n\r\n              <Button size=\"small\" variant=\"contained\" color=\"primary\" className={classes.addSnaps} \r\n              onClick={this.handleOpen}>\r\n                Add Snaps\r\n              </Button>\r\n              <Typography variant=\"subheading\" color=\"textSecondary\" gutterBottom>\r\n                List of Snaps\r\n              </Typography> \r\n\r\n              <Table className={classes.table}>\r\n          <TableHead>\r\n              <TableRow>\r\n                  <CustomTableCell align=\"left\">Name</CustomTableCell>    \r\n                  <CustomTableCell align=\"left\">Version</CustomTableCell>    \r\n                  <CustomTableCell align=\"left\">Revision</CustomTableCell>           \r\n                  <CustomTableCell align=\"left\">Channel</CustomTableCell>              \r\n                  {/* <CustomTableCell align=\"left\">Dev Mode</CustomTableCell> */}\r\n                  <CustomTableCell align=\"left\">Action</CustomTableCell>\r\n                  <CustomTableCell align=\"left\">Status</CustomTableCell>\r\n\r\n              </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n              {snapData.map(row => (\r\n              <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.version}</TableCell>\r\n                  <TableCell align=\"left\">{row.revision}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                  {row.channel !== '' ? row.channel : 'N/A'}</TableCell>\r\n               \r\n                  {/* <TableCell align=\"left\">\r\n                      {row.devmode && (\r\n                          <Brightness1 className={classes.active} color='primary' />\r\n                      )}\r\n\r\n                      {!row.devmode && (\r\n                          <Brightness1 className={classes.offline} color='disabled' />\r\n                      )} \r\n                      \r\n                      {row.devmode ? ' YES' : ' NO'}\r\n                  </TableCell> */}\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Button \r\n                      size=\"small\" \r\n                      variant=\"contained\" \r\n                      color=\"secondary\"\r\n                      disabled={!row.del_enable}\r\n                      onClick={this.deleteSnap.bind(this, row)}\r\n                    >\r\n                      Delete \r\n                    </Button>\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {row.status === 'Installing' && (\r\n                      <RotateRight className=\"rotation\"/>\r\n                    )}\r\n\r\n                    {row.status === 'Installed' && (\r\n                      <WbCloudy/>\r\n                    )}\r\n\r\n                    {row.status === 'Failed' && (\r\n                      <Cancel/>\r\n                    )}\r\n\r\n                    {row.status === 'Deleting' && (\r\n                      <Delete/>\r\n                    )}\r\n\r\n                    <div className={classes.status}>\r\n                      {row.status} \r\n                    </div>\r\n                  </TableCell>\r\n              </TableRow>\r\n              ))}\r\n          </TableBody>\r\n          </Table>\r\n              \r\n              </div>\r\n          </div>\r\n      </div>\r\n      \r\n      \r\n     </div>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\nSnapDashBoard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SimpleModalWrapped = withStyles(styles)(SnapDashBoard);\r\n\r\nexport default withStyles(styles)(SnapDashBoard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SnapDashBoard from './snap.list';\nimport Typography from '@material-ui/core/Typography';\n\nexport default class SnapManagement extends React.Component {\n\n   constructor(props) {\n      super(props);   \n      this.state = { \n        \n      }; \n\n      this.serial = '';\n      \n      if(this.props.match){\n         this.serial = this.props.match.params.serial;\n      }\n   } \n\n   render() {\n       return (\n          <div>\n               <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n                  Snap List\n               </Typography>\n               <hr className=\"hr-line\"/>\n             <SnapDashBoard serial={this.serial}/>\n          </div>\n       );\n    }\n }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport SimpleLineChart from './SimpleLineChart';\nimport SimpleTable from './SimpleTable';\nimport history from '../history';\nimport { Router, Route, Link, Switch} from \"react-router-dom\";\nimport GatewayManagement from '../gateway/gateway.index';\nimport GatewayHealth from '../gateway/health/health.index';\nimport SnapManagement from './../snaps/snap.index';\nimport { AccountCircle } from '@material-ui/icons';\nimport { Settings } from '@material-ui/icons';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed,\n    background:'#f5f5f5' // #2196f3 - f5f5f5\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    background: '#FFF'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  }, \n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n    backgroundColor: '#F7F8F9',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    height: 320,\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2,\n  }\n});\n\nclass Dashboard extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  openSettingMenu = () => {\n    console.log('open setting');\n  };\n\n  handleProfileMenuOpen = event => {\n    //this.setState({ anchorEl: event.currentTarget });\n  };\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          color=\"default\"\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n        >\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(\n                classes.menuButton,\n                this.state.open && classes.menuButtonHidden,\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Thing Point Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n\n            <IconButton color=\"inherit\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <AccountCircle />\n            </IconButton> \n\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbarIcon}>\n          <Typography variant=\"h5\" component=\"h2\">\n            Cloud-UI\n          </Typography>\n          <Typography variant=\"caption\" gutterBottom align=\"left\">\n            (v1.0)\n          </Typography>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n\n            <Router history={history}>\n              <div>\n              <Switch>\n                  <Route path=\"/\" exact component={(props) => <GatewayManagement {...props}/>} />\n                  <Route path=\"/gateway/\" exact component={(props) => <GatewayManagement {...props}/>} />\n                  <Route path=\"/health/:serial/\" exact component={(props) => <GatewayHealth {...props}/>} />\n                  <Route path=\"/snap/:serial/\" exact component={(props) => <SnapManagement {...props}/>} />\n             </Switch>\n            </div>\n\n            </Router>\n\n          {/* <Typography variant=\"h4\" gutterBottom component=\"h2\">\n            Orders\n          </Typography>\n          <Typography component=\"div\" className={classes.chartContainer}>\n            <SimpleLineChart />\n          </Typography>\n          <Typography variant=\"h4\" gutterBottom component=\"h2\">\n            Products\n          </Typography>\n          <div className={classes.tableContainer}>\n            <SimpleTable />\n          </div> */}\n        </main>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LineComponent from './line.chart';\n//import DenseAppBar from './appbar';\nimport {connectToFireStore, connectUsingFirebase, subscribeForRealTimeUpdatesOnDatabase} from './firestore-connection';\n\nimport GatewayManagement from './gateway/gateway.index';\nimport GatewayHealth from './gateway/health/health.index';\n\nimport history from './history.js';\nimport { AppBar } from '@material-ui/core/AppBar';\n//import PropTypes from 'prop-types';\n//import { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Dashboard from './dashboard/Dashboard';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n  \n  componentDidMount() {\n   // this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n  }\n\n  render(){\n    return(\n\n        <Dashboard></Dashboard>\n\n\n      // <div className=\"App\">\n      //   <Router>      \n      //     <Route path=\"/thing_point/:serial/\" exact component={(props) => <LineComponent {...props}/>} />\n      //     <Route path=\"/gateway/\" exact component={(props) => <GatewayManagement {...props}/>} />\n      //     <Route path=\"/health/:macid/\" exact component={(props) => <GatewayHealth {...props}/>} />\n      //   </Router> \n      // </div> \n    );\n  }\n}\n\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport './flexboxgrid.css';\n\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport LineComponent from './line.chart';\nimport DenseAppBar from './appbar';\nimport { Router, Route, Link, Switch} from \"react-router-dom\";\nimport history from './history.js';\nimport App from './App';\n\n/*\nconst routing = (\n    <Router history={history}>\n      <div>\n        {/* <DenseAppBar/> }\n        <Switch>\n            <Route path=\"/thing_point/:serial/\" exact component={(props) => <LineComponent {...props}/>} />\n            <Route path=\"/gateway/\" exact component={(props) => <GatewayManagement {...props}/>} />\n            <Route path=\"/health/:macid/\" exact component={(props) => <GatewayHealth {...props}/>} />\n            <Route path=\"/dashboard/\" exact component={(props) => <Dashboard {...props}/>} />\n        </Switch>\n      </div>\n    </Router>\n  )\n\n  */\n\nReactDOM.render(<App/>, document.getElementById('root'));   \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}